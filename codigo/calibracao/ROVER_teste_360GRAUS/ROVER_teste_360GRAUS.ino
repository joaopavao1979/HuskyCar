// ============================================================================
//              ROB√î COM L298P ‚Äì ROTA√á√ÉO CONTROLADA COM MENU SERIAL
// ============================================================================
// Autor: Jo√£o Pav√£o (com apoio do ChatGPT)
// Descri√ß√£o: Roda no lugar para a direita (sentido anti-hor√°rio), com passos de 30¬∫.
// Permite ajustar os par√¢metros via Monitor Serial de forma interativa.
// ============================================================================

// ----------------------------
// 1. Mapeamento dos pinos
// ----------------------------
const int E1 = 10;  // PWM motor A (direita)
const int M1 = 12;  // Dire√ß√£o motor A
const int E2 = 11;  // PWM motor B (esquerda)
const int M2 = 13;  // Dire√ß√£o motor B (invertido fisicamente)

// ----------------------------
// 2. Par√¢metros configur√°veis
// ----------------------------
int passos = 12;                // N¬∫ de passos (ex: 12 ‚Üí 360¬∫)
int velocidade = 200;           // Velocidade (PWM 0‚Äì255)
int duracaoRotacao = 300;       // Tempo de rota√ß√£o de 30¬∫ (ms)
int pausaEntrePassos = 500;     // Tempo entre passos (ms)

// ============================================================================
// 3. Setup ‚Äì Inicia o menu
// ============================================================================
void setup() {
  pinMode(M1, OUTPUT);
  pinMode(M2, OUTPUT);
  pinMode(E1, OUTPUT);
  pinMode(E2, OUTPUT);

  Serial.begin(9600);
  delay(1000); // Espera pela conex√£o

  Serial.println("\n--- ROB√î HUSKYCAR ‚Äì MENU DE ROTA√á√ÉO ---");
}

// ============================================================================
// 4. Loop principal ‚Äì Menu interativo via Serial
// ============================================================================
void loop() {
  mostrarMenu();

  while (!Serial.available()) {
    delay(100);
  }

  String opcaoStr = Serial.readStringUntil('\n');
  int opcao = opcaoStr.toInt();

  switch (opcao) {
    case 1:
      Serial.print("Novo n√∫mero de passos: ");
      passos = lerValor();
      break;

    case 2:
      Serial.print("Nova velocidade (0‚Äì255): ");
      velocidade = lerValor();
      break;

    case 3:
      Serial.print("Nova dura√ß√£o da rota√ß√£o (ms): ");
      duracaoRotacao = lerValor();
      break;

    case 4:
      Serial.print("Nova pausa entre passos (ms): ");
      pausaEntrePassos = lerValor();
      break;

    case 5:
      Serial.println("\nüîÅ Executando rota√ß√£o no lugar (sentido anti-hor√°rio)...");
      for (int i = 0; i < passos; i++) {
        Serial.print("üîÑ Passo "); Serial.println(i + 1);
        girarDireita();
        delay(pausaEntrePassos);
      }
      parar();
      Serial.println("‚úÖ Rota√ß√£o conclu√≠da.");
      break;

    case 6:
      mostrarParametros();
      break;

    case 0:
      Serial.println("üîÑ Menu reiniciado.\n");
      break;

    default:
      Serial.println("‚ö†Ô∏è Op√ß√£o inv√°lida.");
      break;
  }

  while (Serial.available()) Serial.read(); // limpa o buffer
}

// ============================================================================
// 5. Fun√ß√µes auxiliares de menu
// ============================================================================
void mostrarMenu() {
  Serial.println("\n==========================");
  Serial.println("Escolhe uma op√ß√£o:");
  Serial.println("1. Alterar n√∫mero de passos");
  Serial.println("2. Alterar velocidade (PWM)");
  Serial.println("3. Alterar tempo de rota√ß√£o (ms)");
  Serial.println("4. Alterar pausa entre passos (ms)");
  Serial.println("5. Executar rota√ß√£o");
  Serial.println("6. Mostrar par√¢metros atuais");
  Serial.println("0. Repetir menu");
  Serial.print(">> ");
}

void mostrarParametros() {
  Serial.println("\n--- PAR√ÇMETROS ATUAIS ---");
  Serial.print("üîÑ Passos: "); Serial.println(passos);
  Serial.print("‚ö° Velocidade: "); Serial.println(velocidade);
  Serial.print("‚è±Ô∏è Dura√ß√£o da rota√ß√£o: "); Serial.print(duracaoRotacao); Serial.println(" ms");
  Serial.print("‚è∏Ô∏è Pausa entre passos: "); Serial.print(pausaEntrePassos); Serial.println(" ms");
}

int lerValor() {
  while (!Serial.available()) {
    delay(100);
  }

  String entrada = Serial.readStringUntil('\n'); // Espera at√© Enter
  int valor = entrada.toInt();
  Serial.println(valor); // Confirma o valor
  return valor;
}

// ============================================================================
// 6. Fun√ß√µes de movimento do rob√¥
// ============================================================================
void girarDireita() {
  Serial.println("üõû A girar para a DIREITA (sentido anti-hor√°rio)");

  // Invers√£o dos sentidos para girar na dire√ß√£o certa
  digitalWrite(M1, LOW);   // Motor A (direita) ‚Üí tr√°s
  digitalWrite(M2, LOW);   // Motor B (esquerda) ‚Üí frente (ajustado)

  analogWrite(E1, velocidade);
  analogWrite(E2, velocidade);

  delay(duracaoRotacao);
  parar();
}

void parar() {
  analogWrite(E1, 0);
  analogWrite(E2, 0);
  digitalWrite(M1, LOW);
  digitalWrite(M2, LOW);
}
